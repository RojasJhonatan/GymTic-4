// <auto-generated />
using System;
using Gymtic.App.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GymTic.App.Persistencia.Migrations
{
    [DbContext(typeof(_AppContext))]
    [Migration("20220905014234_InicialA")]
    partial class InicialA
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("GymTic.App.Dominio.Alimentacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Almuerzo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desayuno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiasSemana")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Alimentacion");
                });

            modelBuilder.Entity("GymTic.App.Dominio.CategoriaEjercicios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("NombreCategoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PuntosSaludables")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CategoriaEjercicios");
                });

            modelBuilder.Entity("GymTic.App.Dominio.CategoriaNutricion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("NombreCategoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PuntosSaludables")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CategoriaNutricion");
                });

            modelBuilder.Entity("GymTic.App.Dominio.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("Altura")
                        .HasColumnType("real");

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contraseña")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dirección")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Peso")
                        .HasColumnType("real");

                    b.Property<string>("Teléfono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("GymTic.App.Dominio.Dieta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AlimentacionId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int>("Duracion")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Verificacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlimentacionId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Dieta");
                });

            modelBuilder.Entity("GymTic.App.Dominio.Ejercicios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CaloriasConsumidas")
                        .HasColumnType("int");

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PuntosSaludables")
                        .HasColumnType("int");

                    b.Property<int>("Repeticiones")
                        .HasColumnType("int");

                    b.Property<int>("Series")
                        .HasColumnType("int");

                    b.Property<string>("ZonaCuerpo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Ejercicios");
                });

            modelBuilder.Entity("GymTic.App.Dominio.Nutricion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("DietaId")
                        .HasColumnType("int");

                    b.Property<int>("PuntosVerificacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DietaId");

                    b.ToTable("Nutricion");
                });

            modelBuilder.Entity("GymTic.App.Dominio.PlanSaludable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int?>("NutricionId")
                        .HasColumnType("int");

                    b.Property<int?>("RutinaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("NutricionId");

                    b.HasIndex("RutinaId");

                    b.ToTable("PlanSaludable");
                });

            modelBuilder.Entity("GymTic.App.Dominio.Rutina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("EjerciciosId")
                        .HasColumnType("int");

                    b.Property<string>("Horario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EjerciciosId");

                    b.ToTable("Rutina");
                });

            modelBuilder.Entity("GymTic.App.Dominio.Dieta", b =>
                {
                    b.HasOne("GymTic.App.Dominio.Alimentacion", "Alimentacion")
                        .WithMany()
                        .HasForeignKey("AlimentacionId");

                    b.HasOne("GymTic.App.Dominio.CategoriaNutricion", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId");

                    b.Navigation("Alimentacion");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("GymTic.App.Dominio.Ejercicios", b =>
                {
                    b.HasOne("GymTic.App.Dominio.CategoriaEjercicios", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("GymTic.App.Dominio.Nutricion", b =>
                {
                    b.HasOne("GymTic.App.Dominio.Dieta", "Dieta")
                        .WithMany()
                        .HasForeignKey("DietaId");

                    b.Navigation("Dieta");
                });

            modelBuilder.Entity("GymTic.App.Dominio.PlanSaludable", b =>
                {
                    b.HasOne("GymTic.App.Dominio.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("GymTic.App.Dominio.Nutricion", "Nutricion")
                        .WithMany()
                        .HasForeignKey("NutricionId");

                    b.HasOne("GymTic.App.Dominio.Rutina", "Rutina")
                        .WithMany()
                        .HasForeignKey("RutinaId");

                    b.Navigation("Cliente");

                    b.Navigation("Nutricion");

                    b.Navigation("Rutina");
                });

            modelBuilder.Entity("GymTic.App.Dominio.Rutina", b =>
                {
                    b.HasOne("GymTic.App.Dominio.Ejercicios", "Ejercicios")
                        .WithMany()
                        .HasForeignKey("EjerciciosId");

                    b.Navigation("Ejercicios");
                });
#pragma warning restore 612, 618
        }
    }
}
